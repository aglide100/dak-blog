<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <script src="https://d3js.org/d3.v6.min.js"></script>
  </head>
  <body>
    <div id="my_dataviz"></div>

    <script>
      var margin = { top: 0, right: 0, bottom: 0, left: 0 },
        width = 1000 - margin.left - margin.right,
        height = 800 - margin.top - margin.bottom;

      var svg = d3
        .select("#my_dataviz")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom);

      const keyMax = 40;
      const maxValue = 30;

      let data = [{ value: 0 }];
      for (i = 1; i < keyMax; i++) {
        data.push({ value: generatorRandomInt() });
      }

      function generatorRandomInt() {
        return Math.floor(Math.random() * Math.floor(maxValue));
      }

      // drawing x,y line
      var xScale = d3
        .scaleLinear()
        .domain([0, keyMax - 1])
        .range([0, width - 20]);
      var yScale = d3
        .scaleLinear()
        .domain([-1, maxValue])
        .range([height - 40, 0]);

      // give g
      var xAxisSVG = d3
        .select("svg")
        .append("g")
        .attr("transform", "translate(10, 780)");
      var yAxisSVG = d3
        .select("svg")
        .append("g")
        .attr("transform", "translate(0, 0)");

      xAxisSVG
        .attr("transform", "translate(0," + yScale(0) + ")")
        .call(d3.axisBottom(xScale).tickSize(10).ticks(10));
      yAxisSVG.call(d3.axisRight(yScale).tickSize(10).ticks(10));

      let linearGenerator = d3
        .line()
        .x((d, i) => xScale(i))
        .y((d, i) => yScale(d.value));

      var path = svg
        .append("g")
        .append("path")
        .attr("fill", "none")
        .attr("stroke-width", 2)
        .attr("stroke", "black")
        .join();

      path.transition().duration(100).ease(d3.easeLinear).on("start", tick);

      function tick() {
        data.push({
          value: generatorRandomInt(),
        });

        d3.select(this)
          .attr("transform", null)
          .attr("d", linearGenerator(data));

        d3.active(this)
          .attr("transform", "translate(" + xScale(-1) + ",0)")
          .transition()
          .on("start", tick);

        data.shift();
      }
    </script>
  </body>
</html>
