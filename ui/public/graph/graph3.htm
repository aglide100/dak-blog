<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <script src="https://d3js.org/d3.v6.min.js"></script>
  </head>
  <body>
    <div id="my_dataviz"></div>

    <script>
      var margin = { top: 0, right: 0, bottom: 0, left: 0 },
        width = 1000 - margin.left - margin.right,
        height = 900 - margin.top - margin.bottom;

      var svg = d3
        .select("#my_dataviz")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom);

      var duration = 500;
      const keyMax = 40;
      const maxValue = 30;

      let initTime = new Date(Date.now() - duration);

      let data = [{ value: 0, date: initTime }];
      // init date array
      for (i = 1; i < keyMax; i++) {
        data.push({
          value: generatorRandomInt(),
          date: initTime + i * duration,
        });
      }

      function generatorRandomInt() {
        return Math.floor(Math.random() * Math.floor(maxValue));
      }

      // drawing x,y line
      var xScale = d3
        .scaleTime()
        .domain([initTime, Date.now() + keyMax * duration])
        .range([0, width]);
      var yScale = d3.scaleLinear().domain([-1, maxValue]).range([height, 30]);

      // give g
      var xAxisSVG = d3
        .select("svg")
        .append("g")
        .attr("transform", "translate(0, 0)");
      var yAxisSVG = d3
        .select("svg")
        .append("g")
        .attr("transform", "translate(0, 0)");

      yAxisSVG.call(d3.axisRight(yScale).tickSize(10).ticks(10));

      let linearGenerator = d3
        .line()
        .x((d, i) => xScale(now - (keyMax - 1 - i) * duration))
        .y((d, i) => yScale(d.value));

      var path = svg
        .append("g")
        .append("path")
        .attr("fill", "none")
        .attr("stroke-width", 2)
        .attr("stroke", "black")
        .join();

      path
        .transition()
        .duration(duration)
        .ease(d3.easeLinear)
        .on("start", tick);

      function tick() {
        now = new Date();
        data.push({
          value: generatorRandomInt(),
          date: now,
        });

        console.log(data);

        xScale.domain([now - (keyMax - 2) * duration, now - duration]);

        xAxisSVG
          // .attr("transform", "translate(0," + yScale(0) + ")")
          .transition()
          .call(d3.axisBottom(xScale));

        d3.select(this)
          .attr("transform", null)
          .attr("d", linearGenerator(data));

        d3.active(this).transition().on("start", tick);

        data.shift();
      }
    </script>
  </body>
</html>
