version: "3.5"
x-services-volume: &services-volume
  type: bind

services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    restart: always
    hostname: nginx
    networks:
      - docker_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /home/data/certbot/www:/var/www/certbot
    environment:
      PrimaryDomain: ${PrimaryDomain}
    depends_on:
      - node
  node:
    container_name: node
    build:
      context: ./ui
    hostname: node
    networks:
      - docker_network
    expose:
      - 3000
  go:
    container_name: go
    build:
      context: .
    links:
      - postgres:app_db
    expose:
      - 8888
    networks:
      - docker_network
    environment:
      DB_ADDR: app_db
      DB_PORT: 5432
      DB_USER: table_admin
      DB_PASSWORD: ${USERPWD}
      DB_NAME: blog
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    build:
      context: ./db
    volumes:
      - <<: *services-volume
        source: ${HOST}/postgres
        target: /var/lib/postgres
    expose:
      - 5432
    hostname: postgres
    networks:
      - docker_network
    environment:
      #PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: blog
      #POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: table_admin
      POSTGRES_PASSWORD: ${USERPWD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
  nextcloud:
    image: ghcr.io/linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Seoul
    volumes:
      - /home/data/repositories/docker-repository/nextcloud/appdata:/config
      - /home/data/repositories/docker-repository/file/:/data
    hostname: nextcloud
    networks:
      - docker_network
    links:
      - postgres:app_db
    expose:
      - 443
    restart: unless-stopped

networks:
  docker_network:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
